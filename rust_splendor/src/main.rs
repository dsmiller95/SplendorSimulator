pub mod game_model;

use crate::game_model::game::Game;
use crate::game_model::game_active_data::GameKnowable;

fn main() {
    println!("Hello, world!");

    let game = Game::new();
    println!("game: {:?}", game);
    
    let knowable_size = std::mem::size_of::<GameKnowable>();
    println!("knowable size: {:?}", knowable_size);
    
    let mut knowable_game = GameKnowable::new();
    println!("knowable game: {:?}", knowable_game);
    
    println!("bytes: {:?}", any_as_u8_slice(&knowable_game));
    knowable_game.bank_resources[2] = 27;
    println!("bytes: {:?}", any_as_u8_slice(&knowable_game));
}

fn any_as_u8_slice<T: Sized>(p: &T) -> &[u8] {
    unsafe {
        ::core::slice::from_raw_parts(
            (p as *const T) as *const u8,
            ::core::mem::size_of::<T>(),
        )
    }
}

/*
bytes: [1, 104, 104, 104, 104, 104, 105, 1, 104, 104, 104, 104, 104, 105, 1, 104, 104, 104, 104, 104, 105, 1, 104, 104, 104, 104, 104, 105, 1, 104, 104, 104, 104, 104, 105, 1, 106, 106, 106, 106,
 106, 107, 107, 107, 107, 107, 108, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 1,
106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 0, 0, 0, 0, 0, 0, 0, 0
, 4, 0, 0, 0, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 1, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 108, 0, 0,
 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 101, 101, 101, 101, 101,
  101, 102, 102, 102, 102, 102, 103, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 101, 101, 101
, 101, 101, 101, 102, 102, 102, 102, 102, 103, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 101,
101, 101, 101, 101, 101, 102, 102, 102, 102, 102, 103, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29, 0, 227, 58, 29, 17, 0, 0, 0, 216, 227, 58, 29,
 101, 101, 101, 101, 101, 101, 102, 102, 102, 102, 102, 103, 100, 100, 100, 100, 100, 100]


 */